/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import dominio.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.DefaultListModel;

/**
 *
 * @author culne
 */
public class EstadisticasVuelos extends javax.swing.JFrame implements PropertyChangeListener{

    private Sistema modelo;

    /**
     * Creates new form EstadisticasVuelos
     * @param unSistema
     */
    public EstadisticasVuelos(Sistema unSistema) {
        this.modelo = unSistema;
        initComponents();
        cargarListaDronesSinVuelos();
        cargarListaDronesConVuelos();
        modelo.addPropertyChangeListener(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        listaConVuelos = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaSinVuelos = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaVuelos = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estad√≠sticas");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        listaConVuelos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaConVuelos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaConVuelosValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listaConVuelos);

        listaSinVuelos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listaSinVuelos);

        jLabel1.setText("Drones con vuelos");

        jLabel2.setText("Drones sin vuelo");

        listaVuelos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(listaVuelos);

        jLabel3.setText("Vuelos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaConVuelosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaConVuelosValueChanged
        cargarListaVuelos();
    }//GEN-LAST:event_listaConVuelosValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        modelo.addPropertyChangeListener(this);        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listaConVuelos;
    private javax.swing.JList listaSinVuelos;
    private javax.swing.JList<String> listaVuelos;
    // End of variables declaration//GEN-END:variables

    private void cargarListaDronesSinVuelos() {
        DefaultListModel modeloLista = new DefaultListModel();
        for(int i=0; i<modelo.getListaDronesSinVuelo().size(); i++){
            modeloLista.add(i, modelo.getListaDronesSinVuelo().get(i).getId());
        }
        listaSinVuelos.setModel(modeloLista);
    }

    private void cargarListaDronesConVuelos() {
        DefaultListModel modeloLista = new DefaultListModel();
        for(int i=0; i<modelo.getListaDronesConVuelo().size(); i++){
            modeloLista.add(i, modelo.getListaDronesConVuelo().get(i).getId());
        }
        listaConVuelos.setModel(modeloLista);
    }
    
    public void cargarListaVuelos(){
        if(listaConVuelos.getSelectedValue()!=null){
            Drone unDrone = modelo.getDroneSegunId((String) listaConVuelos.getSelectedValue());
            DefaultListModel modeloLista = new DefaultListModel();
            for(int i=0; i<unDrone.getVuelos().size(); i++){
                modeloLista.add(i, unDrone.getVuelos().get(i).toString());
            }
            listaVuelos.setModel(modeloLista);
        }else{
           DefaultListModel modeloLista = new DefaultListModel();
           listaVuelos.setModel(modeloLista);
        
        }
        
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        cargarListaDronesSinVuelos();
        cargarListaDronesConVuelos();
        cargarListaVuelos();
    }
}
